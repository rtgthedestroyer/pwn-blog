<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Menu on pwn-blog</title><link>https://rtgthedestroyer.github.io/pwn-blog/</link><description>Recent content in Menu on pwn-blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 10 Jun 2025 21:05:17 +0300</lastBuildDate><atom:link href="https://rtgthedestroyer.github.io/pwn-blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Fd_ctf</title><link>https://rtgthedestroyer.github.io/pwn-blog/fd_ctf/</link><pubDate>Tue, 10 Jun 2025 21:05:17 +0300</pubDate><guid>https://rtgthedestroyer.github.io/pwn-blog/fd_ctf/</guid><description>&lt;p>this is how i solved the fd challenge on pwnable.kr&lt;/p>
&lt;p>char buf[32];
int main(int argc, char* argv[], char* envp[]){
if(argc&amp;lt;2){
printf(&amp;ldquo;pass argv[1] a number\n&amp;rdquo;);
return 0;
}
int fd = atoi( argv[1] ) - 0x1234;
int len = 0;
len = read(fd, buf, 32);
if(!strcmp(&amp;ldquo;LETMEWIN\n&amp;rdquo;, buf)){
printf(&amp;ldquo;good job :)\n&amp;rdquo;);
setregid(getegid(), getegid());
system(&amp;quot;/bin/cat flag&amp;quot;);
exit(0);
}
printf(&amp;ldquo;learn about Linux file IO\n&amp;rdquo;);
return 0;&lt;/p>
&lt;p>}&lt;/p>
&lt;p>above is the code that we were given, we can notice that the theme is aboud linux file
descriptors , 0 for input , 1 for output, 2 for errors, the trick here is to convince
the file descriptor to be 0 so we can input the passkey LETMEWIN&lt;/p></description></item></channel></rss>